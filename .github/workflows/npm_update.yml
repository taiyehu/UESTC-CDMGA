name: npm-update 
on:
  workflow_call:
    secrets:
      SSH_HOST: {}
      SSH_SUDO: {}
      SSH_PRIVATE_KEY: {}
      SSH_PORT: {}
  workflow_dispatch:

jobs:
  npm-build-deploy:
    # if: |
    #   github.event_name == 'workflow_dispatch' ||
    #   github.event_name == 'push' 
    name: npm build
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: vueproject

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List json file  # 帮助确认JAR包的位置和名称
      run: ls -la package-lock.json

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # 根据你的项目需求调整Node.js版本
        cache: 'npm'
        cache-dependency-path: vueproject/package-lock.json

    - name: Install dependencies and build
      run: |
        npm ci
        npm run build

    - name: List build output  # 帮助确认构建产物的位置
      run: ls -la dist/  # 通常Vue项目构建输出到dist目录，请根据实际情况调整

    - name: Deploy to Aliyun ECS via SSH
      uses: appleboy/scp-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_SUDO }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "vueproject/dist/*"  
        target: /var/www/  # 修改为目标路径
        strip_components: 1


    - name: Create backup timestamp
      id: backup-time
      run: echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

    - name: Run deployment script via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_SUDO }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
            # 创建备份目录（如果不存在）
            sudo mkdir -p /var/www/backup/
            sudo chmod 755 /var/www/backup/
            
            # 如果当前部署目录存在，则创建备份
            if [ -d "/var/www/CDMGA-ui/" ]; then
                # 创建带时间戳的备份文件
                sudo BACKUP_FILE="/var/www/backup/CDMGA-ui_${{ steps.backup-time.outputs.date }}.tar.gz"

                # 切换到父目录，然后压缩目录内容
                sudo tar -czf "$BACKUP_FILE" /var/www/CDMGA-ui/

                echo "备份完成: $BACKUP_FILE"

                # 显示备份文件信息
                echo "备份文件大小:"
                sudo du -h "$BACKUP_FILE"

                # 清理旧备份（保留最近7天）
                find /var/www/backup/ -name "CDMGA-ui_*.tar.gz" -mtime +7 -exec sudo rm -f {} \; || true
                echo "已清理7天前的旧备份"

                # 清理文件夹
                rm -rf /var/www/CDMGA-ui/
                echo "旧部署文件已清理"

                # 列出当前备份
                echo "当前备份文件:"
                sudo ls -la /var/www/backup/ || echo "备份目录尚不存在"
            else
                echo "警告: 源目录 /var/www/CDMGA-ui/ 不存在，跳过备份"
            fi
 
            sudo mv -f /var/www/dist/ /var/www/CDMGA-ui/
            echo "部署到目标目录"

            # 设置正确的文件权限
            sudo chown -R www-data:www-data /var/www/dist
            sudo chmod -R 755 /var/www/dist
            echo "文件权限已设置"

            # 重启nginx使新部署生效
            sudo systemctl restart nginx
            echo "Nginx 已重启，新版本已部署"

            echo "最新备份文件: /var/www/backup/dist_${{ steps.backup-time.outputs.date }}.tar.gz"
            echo "部署完成时间: $(date)"

